version: 2
jobs:
  test:
    docker:
      - image: circleci/ruby:2.3
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: ci
          POSTGRES_DB: ci

    working_directory: ~/repo

    steps:
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export TEST_DATABASE_URL=postgres://ci@localhost:5432/ci' >> $BASH_ENV
            echo 'export RAILS_ENV=test' >> $BASH_ENV

      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "rubyonrails/notejam/Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
          working_directory: ~/repo/rubyonrails/notejam

      - save_cache:
          paths:
            - ./rubyonrails/notejam/vendor/bundle
          key: v1-dependencies-{{ checksum "rubyonrails/notejam/Gemfile.lock" }}

      # Database setup
      - run:
          name: Setup DB
          command: bundle exec rake db:schema:load
          working_directory: ~/repo/rubyonrails/notejam

      # run tests!
      - run:
          name: run tests
          command: bundle exec rake test
          working_directory: ~/repo/rubyonrails/notejam

  build:
    docker:
      - image: circleci/python:2.7

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: sudo pip install awscli

      - run:
          name: Download packer
          command: curl -sSL https://releases.hashicorp.com/packer/1.2.5/packer_1.2.5_linux_amd64.zip > packer.zip

      - run:
          name: Install packer
          command: sudo unzip -d /usr/local/bin packer.zip

      - run: script/build

      - store_artifacts:
          path: tmp/manifest.json

      - run:
          name: Store artifact in s3
          command: aws --region ap-southeast-1 s3 cp tmp/manifest.json "s3://ahawkins-toptal-notejam/${CIRCLE_SHA1}/manifest.json"

  deploy_staging:
    docker:
      - image: circleci/python:2.7

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install Ansible
          command: sudo pip install ansible boto3 awscli

      - run:
          name: Get Packer Manifest
          command: aws --region ap-southeast-1 s3 cp "s3://ahawkins-toptal-notejam/${CIRCLE_SHA1}/manifest.json" tmp/manifest.json

      - run:
          name: Deploy CloudFormation Stack
          command: script/deploy tmp/manifest.json staging
  deploy_production:
    docker:
      - image: circleci/python:2.7

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Install Ansible
          command: sudo pip install ansible boto3 awscli

      - run:
          name: Get Packer Manifest
          command: aws --region ap-southeast-1 s3 cp "s3://ahawkins-toptal-notejam/${CIRCLE_SHA1}/manifest.json" tmp/manifest.json

      - run:
          name: Deploy CloudFormation Stack
          command: script/deploy tmp/manifest.json production

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          context: AWS
      - deploy_staging:
          requires:
            - build
          context: AWS
      - hold:
          type: approval
          requires:
            - deploy_staging
      - deploy_production:
          requires:
            - hold
          context: AWS
